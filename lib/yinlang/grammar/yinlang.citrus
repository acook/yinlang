grammar YinlangGrammar

  rule expression
    (number operator term:(expression | chain | number)) {
      def head
        number.value
      end

      def tail
        term.value
      end

      def value
        (Array(tail).unshift head).inject do |result, num|
          result.send op, num
        end
      end

      def op
        operator.value
      end
    }
  end

  rule operator
    (space op:('+' | '-') space) {
      def value
        op.strip.to_sym
      end
    }
  end

  rule number
    ([0-9]+) {
      to_i
    }
  end

  rule chain
    (number space link:(chain | number)) {
      def value
        [number.value] + Array(link.value)
      end
    }
  end

  rule space
    [ \t]+
  end

end
